---
- name: Load variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml

- name: Ensure hostname set
  hostname:
    name: "{{ inventory_hostname }}"
  when: not inventory_hostname is match('(\d{1,3}\.){3}\d{1,3}')
  become: True

- name: Ensure hostname is in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "^{{ ansible_default_ipv4.address }}.+$"
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
  tags:
    - molecule_skip
  become: True

- name: Install PostGreSql {{ postgres_version }}
  include_tasks: install.yml
  tags:
    - install

- name: Upgrade PostGreSql to {{ postgres_version }}
  include_tasks: upgrade.yml
  when: postgres_old_version is defined
  tags:
    - upgrade

# this block needs to be tested against diffrent repos----->
- name: Populate service facts
  service_facts:

- name: Disable SELinux
  selinux:
    state: disabled
  tags:
    - selinux
    - molecule_skip

- name: stop service firewalld
  systemd:
    name: firewalld
    enabled: no
    state: stopped
  tags:
    - molecule_skip
  when: ("firewalld" in ansible_facts.services and ansible_os_family|lower == "redhat")


- name: iptables flush filter
  iptables:
    chain: "{{ item }}"
    flush: yes
  tags:
    - molecule_skip
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
#<-----------------------------------------------------------

- name: Configure SR {{ postgres_version }}
  include_tasks: repication.yml
  when: cluster_name is defined
  tags:
    - replication
