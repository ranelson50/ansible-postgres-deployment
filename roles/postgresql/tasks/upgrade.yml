---
- name: Upgrade Database
  become_user: postgres
  block:
    - name: Check if old cluster is running
      stat:
        path: "/var/lib/pgsql/{{ postgres_old_version }}/data/postmaster.pid"
      register: old_cluster_status

    - name: Srop all the connection to old version
      shell: /usr/pgsql-{{ postgres_old_version }}/bin/pg_ctl -D /var/lib/pgsql/{{ postgres_old_version }}/data/ -mf stop
      when: old_cluster_status.stat.exists

    - name: Check if old cluster is running
      stat:
        path: "/var/lib/pgsql/{{ postgres_old_version }}/data/postmaster.pid"
      register: old_cluster_status

    - name: check if database already upgraded
      stat:
        path=/var/lib/pgsql/{{ postgres_old_version }}/data/global/pg_control.old
      register: cluster_ctrl_file

    - name: Upgrade Database
      shell: /usr/pgsql-{{ postgres_version }}/bin/pg_upgrade --old-bindir /usr/pgsql-{{ postgres_old_version }}/bin/ --new-bindir /usr/pgsql-{{ postgres_version }}/bin --old-datadir /var/lib/pgsql/{{ postgres_old_version }}/data --new-datadir /var/lib/pgsql/{{ postgres_version }}/data --link
      when: inventory_hostname in groups['repmgr_master'] and not cluster_ctrl_file.stat.exists

- name: Start postgres
  become: true
  systemd:
    name: "{{ postgres_service_name }}"
    state: started
    enabled: yes
  when: inventory_hostname in groups['repmgr_master']
