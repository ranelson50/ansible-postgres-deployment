---
- name: Initiate postgres
  become: true
  command: "{{ postgres_initdb_command }}"
  args:
    creates: "{{ postgres_hba_file }}"
    warn: false
  tags:
    - initdb

- name: Change port for  Postgresql-{{ postgres_version }}
  lineinfile:
    dest: "{{ postgres_config_file }}"
    regexp: "^#?port =  .*"
    line: "port = 5433"

# - name: stop old postgres
#   command: 'true'
#   notify: Stop old postgres
#   changed_when: false

- name: Stop old postgres
  service:
    name: "{{ postgres_service_name_old }}"
    state: stopped
    enabled: no
    
- name: flush handlers to start service
  meta: flush_handlers

- name: pg_upgrade  | Checking compatibility ...
  shell: "{{ postgres_binary }}/pg_upgrade -b {{ postgres_binary_old }} -B {{ postgres_binary }} -d {{ postgres_data_directory_old }} -D {{ postgres_data_directory }} --old-options '-c config_file={{ postgres_config_file_old }}' --new-options '-c config_file={{ postgres_config_file }}' -c"
  become: true
  become_user: postgres
  register: pg_upgrade_check

- debug:
    msg: "{{ pg_upgrade_check }}"



#To use hard links with pg_upgrade, you pass an additional argument -k as you can see in the following command.
- name: pg_upgrade  | Migrate data ...
  shell: "{{ postgres_binary }}/pg_upgrade -b {{ postgres_binary_old }} -B {{ postgres_binary }} -d {{ postgres_data_directory_old }} -D {{ postgres_data_directory }} --old-options '-c config_file={{ postgres_config_file_old }}' --new-options '-c config_file={{ postgres_config_file }}'"
  become: true
  become_user: postgres
  register: pg_upgrade

- name: Change port for  Postgresql-{{ postgres_version_old }}
  lineinfile:
    dest: "{{ postgres_config_file_old }}"
    regexp: "^#?port =  .*"
    line: "port = 5433"
  notify: Stop old postgres

- name: Change port for  Postgresql-{{ postgres_version }}
  lineinfile:
    dest: "{{ postgres_config_file }}"
    regexp: "^#?port =  .*"
    line: "port = 5432"
  notify: Restart postgres
