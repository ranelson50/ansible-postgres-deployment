---
# tasks file for postgresql-create-db
- name: db checklist status post for Create DB
  import_role:
    name: dbaas_api_services
    tasks_from: db_checklist_status_all.yml
  vars:
    task_key: "{{ ansible_hostname }}"
    task_area: "DB INSTANCE CREATION"
    task_id: "{{ ticket_ref }}"
    task_status: "STARTED"
    task_message: "Creating Database"
    standard_task_id: "{{ standard_task_id }}"
  tags:
  - apex_api

- block:
    - name: Creating databases
      postgresql_db:
        name: "{{ item.name }}"
        encoding: "{{ db_encoding }}"
        lc_collate: "{{ db_collate }}"
        lc_ctype: "{{ db_ctype }}"
      become: true
      become_user: postgres
      register: create_result
      loop: "{{ postgresql_databases }}"
      
  when: inventory_hostname not in groups['SLAVE_HOST']
  rescue:
    - name: db checklist status post for Create DB
      import_role:
        name: dbaas_api_services
        tasks_from: db_checklist_status_all.yml
      vars:
        task_key: "{{ ansible_hostname }}"
        task_area: "DB INSTANCE CREATION"
        task_id: "{{ ticket_ref }}"
        task_status: "FAILED"
        task_message: "Creating Database failed"
        standard_task_id: "{{ standard_task_id }}"
      tags:
      - apex_api

    - name: Instance Creation Failed
      fail:
        msg: Creation of databases failed

- name: db checklist status post for Create DB
  import_role:
    name: dbaas_api_services
    tasks_from: db_checklist_status_all.yml
  vars:
    task_key: "{{ ansible_hostname }}"
    task_area: "DB INSTANCE CREATION"
    task_id: "{{ ticket_ref }}"
    task_status: "SUCCESSFUL"
    task_message: "Database already exists "
    standard_task_id: "{{ standard_task_id }}"
  when: not create_result.changed
  tags:
  - apex_api

- name: db checklist status post for Create DB
  import_role:
    name: dbaas_api_services
    tasks_from: db_checklist_status_all.yml
  vars:
    task_key: "{{ ansible_hostname }}"
    task_area: "DB INSTANCE CREATION"
    task_id: "{{ ticket_ref }}"
    task_status: "SUCCESSFUL"
    task_message: "Database is created "
    standard_task_id: "{{ standard_task_id }}"
  when: create_result.changed
  tags:
  - apex_api
